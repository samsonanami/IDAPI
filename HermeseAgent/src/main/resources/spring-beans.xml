<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--MESSAGING CHANNEL HANDLER (MESSAGING QUEUE) RELATED BEANS-->

    <bean id="connectionFactory" name="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://10.101.15.212:61616"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>

    <bean id="sessionHandler" class="com.fintech.orion.messaging.connection.SessionHandler">
        <constructor-arg ref="connectionFactory"/>
    </bean>

    <bean id="destinationHandler" class="com.fintech.orion.messaging.connection.DestinationHandler" />

    <bean id="jobConsumer" class="com.fintech.orion.messaging.job.JobConsumer">
        <constructor-arg name="queueName" value="MainQueue" />
        <constructor-arg ref="destinationHandler" />
        <constructor-arg ref="sessionHandler" />
    </bean>

    <bean id="jobListener" class="com.fintech.orion.hermes.listener.HermesListener" />

    <!--ORION REPOSITORIES-->

    <bean id="processingRequestRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.ProcessingRequestRepository" />
    <bean id="processingStatusRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.ProcessingStatusRepository" />
    <bean id="responseRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.ResponseRepository" />
    <bean id="licenseRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.LicenseRepository" />
    <bean id="processRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.ProcessRepository"/>
    <bean id="processConfigRepositoryInterface" class="com.fintech.orion.dataabstraction.repositories.ProcessConfigRepository"/>

    <!--ORION SERVICE RELATED BEANS-->

    <bean id="processingRequestService" class="com.fintech.orion.coreservices.ProcessingRequestService" />
    <bean id="processingStatusService" class="com.fintech.orion.coreservices.ProcessingStatusService" />
    <bean id="responseService" class="com.fintech.orion.coreservices.ResponseService" />
    <bean id="licenseService" class="com.fintech.orion.coreservices.LicenseService" />
    <bean id="processService" class="com.fintech.orion.coreservices.ProcessService" />
    <bean id="processConfigService" class="com.fintech.orion.coreservices.ProcessConfigService" />


    <bean id="resourceProviderService" class="com.fintech.orion.hermesagentservices.resources.ResourceProviderService" />
    <bean id="base64Service" class="com.fintech.orion.hermesagentservices.resources.Base64Service" />


    <!--HERMES RELATED BEANS-->

    <bean id="jobHandler" class="com.fintech.orion.messaging.job.JobHandler" />
    <bean id="messageProcessor" class="com.fintech.orion.hermes.processor.MessageProcessor" />
    <bean id="processProvider" class="com.fintech.orion.hermes.provider.ProcessProvider" />
    <bean id="jobManager" class="com.fintech.orion.hermes.handler.JobManager" />
    <bean id="requestProcessor" class="com.fintech.orion.hermes.processor.RequestProcessor" />
    <bean id="requestHandler" class="com.fintech.orion.hermes.handler.RequestHandler" />

    <bean id="requestDelegation" class="com.fintech.orion.hermes.delegate.RequestDelegation" />
    <bean id="licenseHandler" class="com.fintech.orion.hermesagentservices.transmission.response.handler.license.LicenseHandler" />

    <!--REQUEST FACTORY BEANS-->
    <bean id="jenId" class="com.fintech.orion.hermesagentservices.transmission.request.type.JenID" scope="prototype" />


    <!-- ALIAS MATCHING PROCESS TYPE IN DATASOURCE-->
    <alias name="jenId" alias="0" />


    <bean id="requestFactoryService" class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
        <property name="serviceLocatorInterface" value="com.fintech.orion.hermesagentservices.transmission.request.RequestFactoryServiceInterface" />
    </bean>

    <!--VALIDATOR FACTORY BEANS-->

    <bean id="validatorFactory" class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
        <property name="serviceLocatorInterface" value="com.fintech.orion.dto.validator.ValidatorFactoryInterface" />
    </bean>



    <!--TASK EXECUTOR SERVICE-->
    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="WaitForTasksToCompleteOnShutdown" value="true" />
        <property name="awaitTerminationSeconds" value="30" />
    </bean>

    <!--TASK WORKER BEAN-->
    <bean id="requestWorker" class="com.fintech.orion.hermes.run.RequestWorker" />

    <!--WORKER BEANS-->

    <bean id="imageBodyCreator" class="com.fintech.orion.hermesagentservices.transmission.request.body.jenid.image.JPEGImageBodyCreator" />
    <bean id="jenIdBody" class="com.fintech.orion.hermesagentservices.transmission.request.body.JenIdBody" />
    <bean id="jenIdPostSyncRequest" class="com.fintech.orion.hermesagentservices.transmission.request.creator.jenid.JenIdPostSyncRequest" />
    <bean id="requestSubmitter" class="com.fintech.orion.hermesagentservices.transmission.request.submit.RequestSubmitter" />
    <bean id="jenIdResponseHandler" class="com.fintech.orion.hermesagentservices.transmission.response.handler.jenid.JenIdResponseHandler" />

    <bean id="genericMapper" class="com.fintech.orion.hermesagentservices.transmission.response.mapper.GenericMapper" />
    <bean id="responsePersister" class="com.fintech.orion.hermesagentservices.transmission.response.persistence.ResponsePersister" />


    <!--JSON JACKSON MAPPER-->
    <bean id="mapper" class="com.fasterxml.jackson.databind.ObjectMapper" />

</beans>